trigger:
  branches:
    include:
    - master
pr:
- master

jobs:
- job: Linux
  pool:
    name: Hosted Ubuntu 1604
    demands: npm
  strategy:
    matrix:
      node_10_x:
        node_version: 10.x
      node_12_x:
        node_version: 12.x
  steps:
  - task: NodeTool@0
    displayName: 'Use $(node_version)'
    inputs:
      versionSpec: $(node_version)

  - task: Npm@1
    displayName: 'Install dependencies'
    inputs:
      verbose: false
      command: install

  - task: Npm@1
    displayName: 'Compile Extension'
    inputs:
      command: custom
      verbose: false
      customCommand: 'run compile'

  # starts a process that allows the vscode test environment to run
  - script: |
      set -e
      /usr/bin/Xvfb :10 -ac >> /tmp/Xvfb.out 2>&1 &
      disown -ar
    displayName: 'Start xvfb'

  - task: Npm@1
    displayName: 'Run tests via npm script'
    inputs:
      command: custom
      verbose: false
      customCommand: 'run test:ci'
    env:
      DISPLAY: :10

  - task: PublishTestResults@2
    displayName: 'Publish Test Results'
    inputs:
      testResultsFiles: '*-results.xml'
      testRunTitle: '$(Agent.OS)'
    condition: succeededOrFailed()

  - script: |
      npx vsce package -o release.vsix
    displayName: 'create vsix'

  - task: PublishPipelineArtifact@0
    displayName: 'Publish Pipeline Artifact'
    inputs:
      targetPath: release.vsix
    condition: and(success(), eq(variables['node_version'], '12.x'))

- job: Windows
  pool:
    name: Hosted VS2017
    demands: npm
  steps:
  - task: NodeTool@0
    displayName: 'Use Node 10.x'
    inputs:
      versionSpec: 10.x

  - task: Npm@1
    displayName: 'Install dependencies'
    inputs:
      verbose: false
      command: install

  - task: Npm@1
    displayName: 'Compile Extension'
    inputs:
      command: custom
      verbose: false
      customCommand: 'run compile'

  - task: Npm@1
    displayName: 'Run tests via npm script'
    inputs:
      command: custom
      verbose: false
      customCommand: 'run test:ci'
    env:
      DISPLAY: :10

  - task: PublishTestResults@2
    displayName: 'Publish Test Results'
    inputs:
      testResultsFiles: '*-results.xml'
      testRunTitle: '$(Agent.OS)'
    condition: succeededOrFailed()

- job: macOS
  pool:
    name: Hosted macOS
    demands: npm
  steps:
  - task: NodeTool@0
    displayName: 'Use Node 10.x'
    inputs:
      versionSpec: 10.x

  - task: Npm@1
    displayName: 'Install dependencies'
    inputs:
      verbose: false
      command: install

  - task: Npm@1
    displayName: 'Compile Extension'
    inputs:
      command: custom
      verbose: false
      customCommand: 'run compile'

  - task: Npm@1
    displayName: 'Run tests via npm script'
    inputs:
      command: custom
      verbose: false
      customCommand: 'run test:ci'

  - task: PublishTestResults@2
    displayName: 'Publish Test Results'
    inputs:
      testResultsFiles: '*-results.xml'
      testRunTitle: '$(Agent.OS)'
    condition: succeededOrFailed()
